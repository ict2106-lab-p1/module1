@model LivingLab.Web.Models.ViewModels.Accessory.ViewAccessoryTypeViewModel
@* <remarks> *@
@* Author: Team P1-3 *@
@* </remarks> *@
@{
ViewData["Title"] = "Manage Accessory";
}
<link rel="Stylesheet" href="~/css/viewAccessory.css" type="text/css"/>


<div class="grid grid-cols-2 mb-2">
    <div>
        <h3 class="text-lg"> NYP-SR7C </h3>
        <h1 class="text-2xl"> Manage Accessory</h1>
    </div>
    <div class="justify-self-end">
        <button id="addAccessoryBtn" class="bg-purple-500 hover:bg-purple-700 text-white font-bold py-2 px-8 rounded" type="button">
            Add Accessory
        </button>
    </div>
</div>
<hr class="mb-4"/>

<div class= "container my-12 mx-auto px-4 md:px-12">
        <div class= "flex flex-wrap -mx-1 lg:-mx-4">
        @foreach (var accessory in Model.accessoryTypeList)
        {
            <div class="card w-96 bg-base-200 shadow-xl m-12">
                <figure>
                    <img src="https://ak.picdn.net/shutterstock/videos/3820817/thumb/1.jpg?ip=x480"
                            alt="">
                </figure>
                <div class="card-body items-center text-center">
                    <h2 class="card-title">@accessory.Type</h2>
                    <p>Quantity: @accessory.Quantity</p>
                    <div class="card-actions text-center">
                        <button id="viewMoreBtn" class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline my-8 viewMoreBtn" type="button">View More</button>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<form asp-controller="Accessory" asp-action="ViewAccessory" method="post" name="postAccessoryType">
    <input type="hidden" name="accessoryType"/>
</form>

<div class="bg-black bg-opacity-50 absolute inset-0 hidden justify-center items-center" id="overlay">
    <div class="bg-gray-200 max-w-sm py-2 px-3 rounded shadow-xl text-gray-800">
        <div class="flex justify-between items-center">
            <h4 class="text-lg font-bold">Add Accessory</h4>
            <svg class="h-6 w-6 cursor-pointer p-1 hover:bg-gray-300 rounded-full" id="close-modal" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd"
                      d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z"
                      clip-rule="evenodd">
                </path>
            </svg>
        </div>
        <div class="mt-2 text-sm">
            <p>Lorem ipsum dolor sit amet consectetur, adipisicing elit. Maiores, sunt.</p>
        </div>
        <div class="mt-3 flex justify-end space-x-3">
            <button id="closeBtn"  class="px-3 py-1 rounded hover:bg-blue-300 hover:bg-opacity-50 hover:text-blue-900">Cancel</button>
            <button class=" px-3 py-1 bg-blue-800 text-gray-200 hover:bg-blue-600 rounded">Add</button>
        </div>
    </div>
</div>

@section Scripts {
    <script>
            window.addEventListener('DOMContentLoaded', () =>{
                const overlay = document.querySelector('#overlay')
                const addBtn = document.querySelector('#addAccessoryBtn')
                const closeBtn = document.querySelector('#close-modal')
                const viewMoreBtns = document.querySelectorAll('#viewMoreBtn')
                const toggleModal = () => {
                    overlay.classList.toggle('hidden')
                    overlay.classList.toggle('flex')
                }
                const viewwMoreEventHandler = () => {
                    console.log("View More Accessory");
                    var accessoryType = event.target.parentElement.parentElement.firstElementChild.textContent;
                    console.log(accessoryType);
                    document.postAccessoryType.accessoryType.value = accessoryType
                    document.postAccessoryType.submit();
                }

                addBtn.addEventListener('click', toggleModal)
                closeBtn.addEventListener('click', toggleModal)
                viewMoreBtns.forEach(btn => btn.addEventListener('click', viewwMoreEventHandler))
        })
    </script>
    <script src="~/js/viewAccessoryType.js"></script>
}

